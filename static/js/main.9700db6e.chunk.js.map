{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","todosWithUsers","App","useState","todoList","setTodoList","setTitle","setUserId","showError","setShowError","Paper","elevation","sx","width","margin","padding","backgroundColor","Box","action","method","onSubmit","event","preventDefault","newTodo","Math","max","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9700db6e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { TodoWithUser } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={classNames(\n      'TodoInfo',\n      { 'TodoInfo--completed': todo.completed },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import { TodoWithUser } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport {\n  Box,\n  Paper,\n} from '@mui/material';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nconst getUserById = (userId: number): User | undefined => {\n  return usersFromServer.find((user) => user.id === userId);\n};\n\nconst todosWithUsers = todosFromServer.map((todo) => (\n  {\n    ...todo,\n    user: getUserById(todo.userId),\n  }\n));\n\nconst getNewTodoId = (todos: Todo[]) => {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n};\n\nexport const App = () => {\n  const [todoList, setTodoList] = useState(todosWithUsers);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [showError, setShowError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (title && userId) {\n      const newTodo = {\n        id: getNewTodoId(todoList),\n        title,\n        completed: false,\n        userId,\n        user: getUserById(userId),\n      };\n\n      setTodoList([...todoList, newTodo]);\n      setTitle('');\n      setUserId(0);\n      setShowError(false);\n    } else {\n      setShowError(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Paper\n        elevation={3}\n        sx={{\n          width: 'max-content',\n          margin: 'auto',\n          padding: 5,\n          backgroundColor: '#a9de70',\n        }}\n      >\n        <Box>\n          <h1>Add todo form</h1>\n\n          <form\n            action=\"/api/users\"\n            className=\"form\"\n            method=\"POST\"\n            onSubmit={handleSubmit}\n          >\n\n            <div className=\"field\">\n              <label>\n                Title:\n\n                <input\n                  type=\"text\"\n                  data-cy=\"titleInput\"\n                  value={title}\n                  placeholder=\"Enter a title\"\n                  onChange={(event) => {\n                    const { value } = event.target;\n\n                    setTitle(value);\n                  }}\n                />\n              </label>\n\n              {showError && !title && (\n                <span className=\"error\">\n                  Please enter a title\n                </span>\n              )}\n            </div>\n\n            <div className=\"field\">\n              <label>\n                User:\n\n                <select\n                  data-cy=\"userSelect\"\n                  value={userId}\n                  onChange={(event) => {\n                    const { value } = event.target;\n\n                    setUserId(+value);\n                  }}\n                >\n                  <option value=\"0\" disabled>Choose a user</option>\n\n                  {usersFromServer.map((user) => {\n                    const { id, name } = user;\n\n                    return (\n                      <option value={id} key={id}>\n                        {name}\n                      </option>\n                    );\n                  })}\n                </select>\n              </label>\n\n              {showError\n                  && !userId\n                  && (\n                    <span className=\"error\">\n                      Please choose a user\n                    </span>\n                  )}\n            </div>\n\n            <button type=\"submit\" data-cy=\"submitButton\">\n              Add\n            </button>\n          </form>\n\n          <TodoList todos={todoList} />\n        </Box>\n      </Paper>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}